# EchoLock Environment Configuration
# Copy this file to .env and fill in your actual values

# ============================================
# SERVER CONFIGURATION
# ============================================
NODE_ENV=development
PORT=3000

# Frontend URL (for email links and CORS)
FRONTEND_URL=http://localhost:3001

# ============================================
# DATABASE CONFIGURATION (PostgreSQL)
# ============================================
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://echolock:your-password@localhost:5432/echolock

# Connection pool settings (optional)
DB_POOL_MIN=2
DB_POOL_MAX=10

# ============================================
# AUTHENTICATION & SECURITY
# ============================================
# JWT Secret (MUST be random and secure in production)
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your-jwt-secret-here-change-this-in-production

# Service encryption master key (MUST be random and secure)
# Used for encrypting sensitive data in database
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
SERVICE_ENCRYPTION_KEY=your-encryption-key-here-change-this-in-production

# Token expiration times
JWT_ACCESS_TOKEN_EXPIRY=15m
JWT_REFRESH_TOKEN_EXPIRY=7d

# Password reset token expiry (in milliseconds)
PASSWORD_RESET_EXPIRY=3600000

# Email verification token expiry (in milliseconds)
EMAIL_VERIFICATION_EXPIRY=86400000

# ============================================
# EMAIL SERVICE (Resend.com)
# ============================================
# Get your API key from: https://resend.com/api-keys
RESEND_API_KEY=re_your_api_key_here

# Email sender address (must be verified domain)
FROM_EMAIL=EchoLock <noreply@echolock.xyz>

# ============================================
# NOSTR CONFIGURATION
# ============================================
# Enable Nostr relay distribution for secret fragments
# Set to 'true' to use Nostr relays, 'false' for local storage only
USE_NOSTR_DISTRIBUTION=true

# Default Nostr relays (comma-separated) - Minimum 7 required
# These are used for fragment distribution
NOSTR_RELAYS=wss://relay.damus.io,wss://nos.lol,wss://relay.nostr.band,wss://nostr.wine,wss://relay.snort.social,wss://nostr.mom,wss://relay.current.fyi,wss://nostr-pub.wellorder.net

# Relay timeout (milliseconds)
NOSTR_RELAY_TIMEOUT=5000

# ============================================
# RATE LIMITING
# ============================================
# General API rate limit (requests per window)
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Auth endpoint rate limit (more strict)
AUTH_RATE_LIMIT_WINDOW_MS=900000
AUTH_RATE_LIMIT_MAX_REQUESTS=20

# ============================================
# TIMER MONITOR (Cron Job)
# ============================================
# Run timer monitor immediately on startup (useful for testing)
RUN_TIMER_ON_STARTUP=false

# Cron schedule for timer monitor (default: every 5 minutes)
# Format: minute hour day month weekday
TIMER_MONITOR_SCHEDULE=*/5 * * * *

# ============================================
# LOGGING
# ============================================
# Log level: error, warn, info, debug
LOG_LEVEL=info

# Log format: json (production) or pretty (development)
LOG_FORMAT=pretty

# ============================================
# CORS CONFIGURATION
# ============================================
# Allowed origins for CORS (comma-separated)
# In production, set this to your frontend domain
CORS_ORIGINS=http://localhost:3001,https://echolock.xyz

# ============================================
# APPLICATION SETTINGS
# ============================================
# Maximum message size (bytes)
MAX_MESSAGE_SIZE=10485760

# Maximum recipients per switch
MAX_RECIPIENTS_PER_SWITCH=10

# Minimum check-in hours
MIN_CHECK_IN_HOURS=1

# Maximum check-in hours
MAX_CHECK_IN_HOURS=8760

# ============================================
# BITCOIN TIMELOCK INTEGRATION
# ============================================
# Enable Bitcoin timelock for cryptographic proof of timing
# Requires Bitcoin testnet RPC access - keep false unless configured
USE_BITCOIN_TIMELOCK=false

# Bitcoin network (only testnet allowed until security audit)
BITCOIN_NETWORK=testnet

# Bitcoin RPC credentials (optional, only needed if USE_BITCOIN_TIMELOCK=true)
# BITCOIN_RPC_URL=http://localhost:18332
# BITCOIN_RPC_USER=your_rpc_user
# BITCOIN_RPC_PASSWORD=your_rpc_password

# ============================================
# DEVELOPMENT/TESTING
# ============================================
# Skip email verification in development
SKIP_EMAIL_VERIFICATION=false

# Use mock email service (logs instead of sending)
MOCK_EMAIL_SERVICE=false

# Database connection test on startup
TEST_DB_CONNECTION=true
